UNIVERSIDADE FEDERAL DE GOIÁS - UFG
CURSO: ESPECIALIZAÇÃO EM ANÁLISE E PROJETO DE SISTEMAS DE INFORMAÇÃO
TURMA: APSI-2006
ALUNO: RODRIGO MORIAN LOURES

PROJETO: ESCOLA
MÓDULO: AVALIAÇÃO DO CORPO DOCENTE


ÍNDICE

1- Introdução
2- Estrutura de pastas
3- Pré-Requisitos de Instalação
4- Instalação
5- Observações
5- Bibliotecas


1- INTRODUÇÃO

O "Escola" é o projeto de desenvolvimento de um software livre para gerenciamento acadêmico de cursos de pós-graduação (para ver mais detalhes leia a documentação do projeto).
A “Avaliação do Corpo Docente” é um módulo do “Escola”, que irá interagir Aluno, Docente e Secretário para a realização de avaliação de docentes. Uma avaliação de docente estará disponível para os alunos durante o período de execução da disciplina em uma turma. Servirá para o docente verificar seu desempenho em cada turma, segundo a visão dos alunos.


2- ESTRUTURA DE PASTAS

2.1- acd
	- Diretório raiz do projeto, contém todas as pastas e arquivos do projeto;

2.2- acd/src
	- Pacotes com arquivos de código fonte java (*.java);
	- Pasta META-INF => contém arquivos xml para mapeamento objeto-relacional usado pelo JPA;
	- Pasta db => comtém os arquivos do banco de dados escola;
	- Arquivo build.xml, arquivo usado pelo Ant para automatizar tarefas;
	- Arquivo applicationContext, arquivo de contexto da aplicação usado pela framework Spring, definido para a aplicação;
	- Arquivo testContext, arquivo de contexto da aplicação usado pela framework Spring, definido para execução de testes de unidades;
	- Arquivo log4j.properties, contém as configurações para geração de logs de persistência;
	- Arquivo Leiame.txt, este arquivo, com uma rápida explicação sobre o projeto e instruções de instalação.

2.3- acd/test
	- Pacotes com arquivos de código fonte java (*.java) para testes de unidades usando JUnit e AbstractJpaTests;

2.4- acd/web
	- Pasta META-INF;
	- Pasta WEB-INF
		+ Pasta classes, arquivos compilados do sistema;
		+ Pasta classes/db, arquivos do banco de dados;
		+ Pasta lib, bibliotecas java (*.jar) necessárias para executar a aplicação.
		+ Arquivo web.xml, configuração da aplicação para o Tomcat;
		+ Arquivo faces-config.xml, arquivo de configuração JSF;
	- Arquivos JSF e JSP (*.jsp);


3- PRÉ-REQUISITOS DE INSTALAÇÃO

Ferramentas do KAD (KAD-0.9) instaladas no computador, ou assegure que estajam instalados no computador o TomCat 6.0, Java Standard Edition Runtime Environment 6.0 (JRE), ant, e que todas as bibliotecas do diretório "../acd/web/WEB-INF/lib" citadas no item 6 estejam presentes;


3- INSTALAÇÃO

	3.1- Abra o prompt de comando, vá para o diretório "../acd/src" da aplicação;

	3.2- Execute o comando "ant compile", para compilar os arquivos fonte java (*.java);

	3.3- Execute o comando "ant prepare", para preparar a aplicação para instalação;

	3.4- Execute o comando "ant db-start", para inicializar e criar o banco de dados;

	3.5- Execute o comando "startup.sh" (startup.bat - Windows), para inicializar o TomCat;

	3.6- Instalar a aplicação no TomCat:
		3.6.1- Abra o Browser, digite a URL, http://localhost:8080;
		3.6.2- Clique em "Tomcat Manager", digite o usuário - "admin" e a senha - "admin" e clique no botão OK;
		3.6.3- Vá para parte de Deploy e preencha os campos da seguinte maneira:
		3.6.3.1- Context Path (optional): "/acd";
		3.6.3.2- XML Configuration file URL: "../acd/web/WEB-INF/web.xml";
		3.6.3.3- WAR or Directory URL: "../acd/web/WEB-INF";
		3.6.3.4- Clique no botão Deploy;

	3.6.4- Verifique se o projeto está criado na lista de aplicações e está iniciado.


4- ACESSANDO A APLICAÇÃO

Abra o browser, informe a URL "http://localhost:8080/acd" e tecle <ENTER>, então aparecerá o menu de opções do sistema.


5- OBSERVAÇÕES

5.1- O pacote "br.ufg.inf.apsi.escola.componentes.externo.servicos" que se encontra no diretório "../acd/src", não faz parte deste componente, foi criado com o intuito de simular servicos de componentes externos ao componente "acd", dos quais o componente "acd" depende. Dessa forma, pode-se executar e testar o componente "acd", enquanto os servicos externos dos quais este componente dependente, nao estão disponíveis.


6- BIBLIOTECAS

Bibliotecas java necessárias para a execução da aplicação. Essas bibliotecas devem estar no diretório "..acd/web/WEB-INF/lib". As principais ferramentas das quais essas bibliotecas fazem parte são: apache-tomcat-6.0.13, hibernate-3.2, hibernate-annotations-3.3.0.GA, hibernate-entitymanager-3.3.1.GA, hsqldb-1.8.0.7, jmock-2.1.0, jsf-1.2_04-b16-p02, junit4.3.1, spring-framework-2.0.6. Segue abaixo a lista das bibliotecas (*.jar): 

acegi-security-1.0.3.jar  commons-collections.jar      ehcache-1.2.4.jar                  jboss-archive-browsing.jar  persistence.jar
antlr-2.7.6.jar           commons-dbcp.jar             ejb3-persistence.jar               jmock-2.1.0.jar             spring-aspects.jar
appbase.jar               commons-digester.jar         hamcrest-library-1.0.jar           jmock-junit4-2.1.0.jar      spring.jar
asm.jar                   commons-el-1.0.jar           hibernate3.jar                     jsf-api.jar                 spring-mock.jar
aspectjrt.jar             commons-lang.jar             hibernate-annotations.jar          jsfcl.jar                   standard.jar
aspectjweaver.jar         commons-logging.jar          hibernate-commons-annotations.jar  jsf-impl.jar                webui.jar
cglib-2.1.3.jar           commons-pool.jar             hibernate-entitymanager.jar        jstl.jar
cglib-nodep-2.1_3.jar     commons-validator-1.3.1.jar  hibernate-validator.jar            jta.jar
commons-beanutils.jar     dataprovider.jar             hsqldb.jar                         junit-4.3.1.jar
commons-codec-1.3.jar     dom4j-1.6.1.jar              javassist.jar                      log4j-1.2.14.jar
