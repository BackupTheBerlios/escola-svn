<?xml version="1.0" encoding="UTF-8"?>
<project name="admc" basedir="." default="deploy">

	<!-- Configuracoes do projeto -->
	    <property name="project.distname" value="admc"/>
	
	<!-- ================================================================= -->
	<!-- Define 'kad.libs' (repositório de bibliotecas do Kad)                    -->
	<!-- ================================================================= -->
	<property environment="env" />
	<property name="kad.libs" value="${env.KAD_LIBS}" />

	<!-- ================================================================= -->
	<!-- Propriedades de bibliotecas do Kad                                -->
	<!-- ================================================================= -->
	<property file="${kad.libs}/kad-libs.properties" />

	<property name="src.dir" location="${basedir}/src" />
	<property name="build.dir" location="${basedir}/build" />
	<property name="test.dir" location="${basedir}/test" />
	<property name="webroot.dir" value="${basedir}/web"/>
	<property name="webinf.dir" value="${webroot.dir}/WEB-INF"/>
	

	<!-- ================================================================= -->
	<!-- CLASSPATH (bibliotecas e diretórios necessários para Hibernate    -->
	<!-- ================================================================= -->
	<path id="projeto.classpath">
		<pathelement location="${hibernate.jar}" />
		<pathelement location="${hsqldb.jar}" />
		<fileset dir="${hibernate.dir}/lib" includes="*.jar" />
		<fileset dir="${h.entity.dir}/lib" includes="*.jar" />
		<pathelement location="${h.entity1.jar}" />
		<pathelement location="${h.entity2.jar}" />
		<pathelement location="${h.tools1.jar}" />
		<pathelement location="${h.tools2.jar}" />
		<pathelement location="${h.annotations.jar}" />
		<pathelement location="${spring.jar}" />
		<pathelement location="${acegi.jar}" />
		<pathelement location="${ant-contrib.jar}" />
		<pathelement location="${commons-beanutils.jar}" />
		<pathelement location="${commons-collections.jar}" />
		<pathelement location="${commons-dbcp.jar}" />
		<pathelement location="${commons-digester.jar}" />
		<pathelement location="${commons-fileupload.jar}" />
		<pathelement location="${commons-io.jar}" />
		<pathelement location="${commons-lang.jar}" />
		<pathelement location="${commons-logging.jar}" />
		<pathelement location="${commons-pool.jar}" />
		<pathelement location="${commons-validator.jar}" />
		<pathelement location="${jaf.jar}" />
		<pathelement location="${javamail.jar}" />
		<pathelement location="${jstl.jar}" />
		<pathelement location="${jsp2.jar}" />
		<pathelement location="${junit.jar}" />
		<pathelement location="${log4j.jar}" />
		<pathelement location="${servletapi.jar}" />
		<pathelement location="${sitemesh.jar}" />
		<pathelement location="${jsf.jar}" />
		<pathelement location="${jsf2.jar}" />	
	
		<pathelement path ="${webinf.dir}/classes"/>

		<!-- Inclui arquivos de configuração -->
		<path location="${ant.project.name}" />
	</path>

	    <!-- Pasta onde sera armazenado o binario -->
	    <property name="deploy.dir" value="deploy"/>

	    <!-- Verifica arquivos modificados -->
	    <target name="prepare">
	        <tstamp/>
	    </target>

	    <!-- Copia arquivos de configuracao para a pasta correta -->
	    <target name="resources">
	        <copy todir="${webinf.dir}/classes" includeEmptyDirs="no">
	            <fileset dir="${src.dir}">
	            <patternset>
	                <include name="**/*.conf"/>
	                <include name="**/*.properties"/>
	                <include name="**/*.xml"/>
	            </patternset>
	            </fileset>
	        </copy>
	    </target>

	    <!-- Compila arquivos -->
	    <target name="compile" depends="prepare,resources">
	        <javac srcdir="${src.dir}" destdir="${webinf.dir}/classes">
	            <classpath refid="projeto.classpath"/>
	        </javac>
	    </target>

	    <!-- Remove arquivos compilados da pasta build -->
	    <target name="clean"
	      description="Prepare for clean build">
	      <delete dir="${webinf.dir}/classes"/>
	      <mkdir  dir="${webinf.dir}/classes"/>
	    </target>

	    <!-- Constroi ou Reconstroi o projeto -->
	    <target name="build" depends="prepare,compile,db-start,db-manager"/>
	    <target name="rebuild" depends="clean,prepare,compile,db-start,db-manager"/>

	    <!-- Cria arquivo binario para distribuicao -->
	    <target name="war" depends="build">
	      <mkdir dir="${build.dir}"/>
	      <war
	        basedir="${webroot.dir}"
	        warfile="${build.dir}/${project.distname}.war"
	        webxml="${webinf.dir}/web.xml">
	        <exclude name="WEB-INF/${build.dir}/**"/>
	        <exclude name="WEB-INF/src/**"/>
	        <exclude name="WEB-INF/web.xml"/>
	       </war>

	    </target>

	    <target name="deploy" depends="war">
	       <delete file="${deploy.dir}/${project.distname}.war"/>
	       <delete dir="${deploy.dir}/${project.distname}"/>
	       <copy file="${build.dir}/${project.distname}.war" todir="${deploy.dir}"/>
	    </target>
	
	<target name="db-start" description="inicia SGBD (escola)">
		<java classname="org.hsqldb.Server" spawn="yes" fork="yes">
			<jvmarg value="-Duser.dir=${kad.libs}" />
			<classpath>
				<pathelement path="${hsqldb.jar}" />
			</classpath>
		</java>
	</target>

	<target name="db-manager" description="inicia HSQLDB manager (cliente SQL)">
		<java classname="org.hsqldb.util.DatabaseManagerSwing" spawn="yes" fork="yes">
			<arg line="-url jdbc:hsqldb:hsql://localhost/escola" />
			<classpath>
				<pathelement path="${hsqldb.jar}" />
			</classpath>
		</java>
	</target>

	<target name="db-schema" description="Exporta o Schema para o Banco">
	<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="projeto.classpath" />
	<hibernatetool destdir="${build.dir}">
			<jpaconfiguration persistenceunit="pu" />
				<classpath>
					<path location="${build.dir}/classes" />
				</classpath>
				<hbm2ddl export="true" outputfilename="schema.sql" />
	</hibernatetool>
	</target>
	
</project>
